== Git Tools

By now, you’ve learned most of the day-to-day commands and workflows that you need to manage or maintain a Git repository for your source code control.
You’ve accomplished the basic tasks of tracking and committing files, and you’ve harnessed the power of the staging area and lightweight topic branching and merging.

Now you’ll explore a number of very powerful things that Git can do that you may not necessarily use on a day-to-day basis but that you may need at some point.


include::01-revision-selection.asc[]

include::02-interactive-staging.asc[]

include::03-stashing.asc[]

include::04-signing.asc[]

include::05-searching.asc[]

include::06-rewriting-history.asc[]

include::07-debugging.asc[]

include::08-submodules.asc[]

include::09-subtree-merging.asc[]

include::10-notes.asc[]

include::11-bundling.asc[]

include::12-rerere.asc[]

include::13-history-hacks.asc[]

=== Summary

You’ve seen a number of advanced tools that allow you to manipulate your commits and staging area more precisely.
When you notice issues, you should be able to easily figure out what commit introduced them, when, and by whom.
If you want to use subprojects in your project, you’ve learned a few ways to accommodate those needs.
At this point, you should be able to do most of the things in Git that you’ll need on the command line day to day and feel comfortable doing so.
