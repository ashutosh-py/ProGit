=== Setting Up a User Account

(((GitHub, user accounts)))
The first thing you need to do is set up a free user account.
Simply visit https://github.com[], choose a user name that isn't already taken, provide an email address and a password, and click the big green "`Sign up for GitHub`" button.

.The GitHub sign-up form.
image::images/signup.png[The GitHub sign-up form.]

The next thing you'll see is the pricing page for upgraded plans, but it's safe to ignore this for now.
GitHub will send you an email to verify the address you provided.
Go ahead and do this, it's pretty important (as we'll see later).

[NOTE]
====
GitHub provides all of its functionality with free accounts, with the limitation that all of your projects are fully public (everyone has read access).
GitHub's paid plans include a set number of private projects, but we won't be covering those in this book.
====

Clicking the Octocat logo at the top-left of the screen will take you to your dashboard page.
You're now ready to use GitHub.

==== SSH Access

(((SSH keys, with GitHub)))
As of right now, you're fully able to connect with Git repositories using the `https://` protocol, authenticating with the username and password you just set up.
However, to simply clone public projects, you don't even need to sign up - the account we just created comes into play when we fork projects and push to our forks a bit later.

If you'd like to use SSH remotes, you'll need to configure a public key.
(If you don't already have one, see <<_generate_ssh_key>>.)
Open up your account settings using the link at the top-right of the window:

.The "`Account settings`" link.
image::images/accountsettings.png[The "`Account settings`" link.]

Then select the "`SSH keys`" section along the left-hand side.

.The "`SSH keys`" link.
image::images/sshkeys.png[The "`SSH keys`" link.]

From there, click the "`Add an SSH key`" button, give your key a name, paste the contents of your `~/.ssh/id_rsa.pub` (or whatever you named it) public-key file into the text area, and click "`Add key`".

[NOTE]
====
Be sure to name your SSH key something you can remember. You can name each of your keys (eg, "My Laptop" or "Work Account") so that if you need to revoke a key later, you can easily tell which one you're looking for.
====
