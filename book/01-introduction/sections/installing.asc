=== Git installieren

Bevor man mit Git loslegen kann, muss man es natürlich als aller erstes installieren.
Auch wenn es vielleicht bereits auf dem Rechner installiert ist, sollte man sicherstellen, dass die aktuellste Version vorhanden ist.
Es gibt verschiedene Möglichkeiten Git zu installieren. Man kann es entweder als fertiges Paket oder über ein Installationsprogramm installieren, oder alternativ den Quellcode herunterladen und selbst kompilieren.

[NOTE]
====
Die Beispiele aus diesem Buch basieren alle auf Git in der Version *2.0.0*. Auch wenn die meisten Befehle, die wir anwenden werden, auch in älteren Versionen funktionieren, kann es doch sein, dass die Befehlsausgabe oder das Verhalten leicht anders ist. Da in Git sehr auf Abwärtskompatibilität geachtet wird, sollten aber alle neueren Versionen nach der Version 2.0 genauso gut funktionieren.
====

==== Installation unter Linux

(((Linux, Installation)))
Wenn man Git unter Linux mit einem Installationsprogramm installieren will, kann man das normalerweise mit dem Paketmanager, der jeweiligen Distribution tun.
Unter Fedora zum Beispiel, kann man dazu yum verwenden:

  $ yum install git

Auf einem Debian-basierten System, wie Ubuntu, steht apt-get zur Verfügung:

  $ apt-get install git

Auf der Git Homepage http://git-scm.com/download/linux[] findet man weitere Möglichkeiten und Optionen, wie man Git unter einem Unix-basierten Betriebssystem installieren kann.

==== Installation unter Mac OS X

(((Mac, Installation)))
Auch beim Mac gibt es verschiedene Wege um Git zu installieren.
Der einfachste ist wahrscheinlich, die Xcode Kommandozeilenwerkzeuge zu installieren.(((Xcode)))
Bei Mavericks (10.9) oder neueren Versionen kann man dazu einfach 'git' im Terminal eingeben.
Wenn Git noch nicht installiert ist, erscheint eine Abfrage, ob man es installieren möchte.

Wenn man eine sehr aktuelle Version einsetzen möchte, kann man Git auch über ein Installationsprogramm installieren.
Auf der Git Homepage http://git-scm.com/download/mac[] findet man die jeweils aktuellste Version und kann sie von dort herunterladen.

.Git OS X Installationsprogramm.
image::images/git-osx-installer.png[Git OS X installer.]

Ein weitere Möglichkeit ist es, GitHub for Mac zu installieren.
Es gibt dort eine Option, dass man neben der grafischen Oberfläche auch gleich die Kommandozeilen Werkzeuge mit installieren kann.
GitHub for Mac kann man unter http://mac.github.com[] herunterladen.

==== Installation unter Windows

(((Windows, Installation)))
Auch für Windows gibt es einige, wenige Möglichkeiten zur Installation von Git.
Eine offizielle Windows Version findet man direkt auf der Git Homepage.
Gehen Sie dazu auf http://git-scm.com/download/win[] und der Download sollte dann automatisch starten.
Man sollte dabei beachten, dass es sich hierbei um das Projekt Git for Windows handelt (auch msysGit genannt), welches unabhängig von Git selbst ist. Weitere Informationen hierzu finden Sie unter http://msysgit.github.io/[].

Eine weitere Möglichkeit ist es, GitHub for Windows zu installieren.
Das Installationsprogramm enthält neben der GUI, auch eine Kommandozeilenversion von Git.
Diese funktioniert zusammen mit der Powershell tadellos, und richtet die wichtigsten Berechtigungs-Caching- (engl. credential caching) und Zeilenenden-Konfigurationen (CRLF) vorab ein.(((Powershell)))(((CRLF)))(((Berechtigungs-Caching)))
Was es damit genau auf sich hat, werden Sie erst später verstehen. Erst mal reicht es aus, dass Sie wissen, dass sie so etwas haben wollen.
Sie können das ganze Paket von der GitHub for Windows Homepage unter http://windows.github.com[] herunterladen.

==== Vom Quellcode aus installieren

Viele Leute kompilieren Git auch auf ihrem eigenen Rechner, weil sie damit, die jeweils aktuellste Version erhalten.
Die vorbereiteten Pakete hinken meist ein wenig hinterher. Heutzutage ist dies nicht mehr ganz so schlimm, da Git einen gewissen Reifegrad erfahren hat.

Um Git zu installieren, benötigt man die folgenden Bibliotheken, die von Git verwendet werden: curl, zlib, openssl, expat und libiconv.
Wenn auf dem System yum (z.B. auf Fedora) oder apt-get (z.B auf allen Debian-basierten System) zur Verfügung steht, kann man folgende Befehle verwenden, um diese Abhängigkeiten zu installieren:

  $ yum install curl-devel expat-devel gettext-devel \
    openssl-devel zlib-devel

  $ apt-get install libcurl4-gnutls-dev libexpat1-dev gettext \
    libz-dev libssl-dev

Um die Dokumentation in verschiedenen Formaten (doc, html, info) zu erstellen, sind weitere Abhängigkeiten notwendig:

  $ yum install asciidoc xmlto docbook2x

  $ apt-get install asciidoc xmlto docbook2x

Wenn man alle notwendigen Abhängigkeiten installiert hat, kann man sich als nächstes die jeweils aktuellste Version als Tarball von verschiedenen Stellen herunterladen.

Man findet die Quellen auf der Kernel.org Website unter https://www.kernel.org/pub/software/scm/git[], oder gespiegelt auf der GitHub Website unter https://github.com/git/git/releases[].
Auf der GitHub Homepage ist es einfacher herauszufinden, welches die jeweils aktuellste Version ist. Auf kernel.org hingegen werden auch Signaturen, zur Verifikation des Downloads, der jeweiligen Pakete zur Verfügung gestellt.

Nachdem man sich die Quellen also beschafft hat, kann man Git kompilieren und installieren:

  $ tar -zxf git-2.0.0.tar.gz
  $ cd git-2.0.0
  $ make configure
  $ ./configure --prefix=/usr
  $ make all doc info
  $ sudo make install install-doc install-html install-info

Jetzt nachdem Git installiert ist, kann man sich Git Updates auch per Git beschaffen:

  $ git Uclone git://git.kernel.org/pub/scm/git/git.git
