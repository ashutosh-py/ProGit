=== Tentang Kontrol Versi

(((version kontrol)))
Apa itu ``kontrol versi '', dan mengapa anda harus peduli?
Kontrol versi merupakan sebuah sistem yang merekam perubahan untuk berkas atau  kumpulan berkas dari waktu ke waktu sehingga anda dapat memanggil kembali versi tertentu nanti.
Sebagai contoh dalam buku ini, anda akan menggunakan kode sumber perangkat lunak karena berkas-berkas dikontrol oleh versi, meskipun pada kenyataannya anda dapat melakukan hal ini dengan hampir semua jenis berkas pada komputer.

Jika anda seorang desainer grafis atau perancang web dan ingin untuk menyimpan setiap versi dari gambar atau tata letak (yang sangat anda inginkan), Version Control System (VCS) merupakan hal yang sangat bijaksana untuk digunakan.
Ini memungkinkan anda mengembalikan berkas yang dipilih kembali ke keadaan sebelumnya, membandingkan perubahan dari waktu ke waktu, lihat siapa yang terakhir memodifikasi sesuatu yang mungkin menimbulkan masalah, siapa yang memperkenalkan masalah dan kapan, dan banyak lagi.
Menggunakan VCS juga secara umum berarti bahwa jika anda mengacaukan segalanya dan menghilangkan berkas, anda dapat dengan mudah memulihkan kembali.
Tambahan, anda mendapatkan semua ini untuk ongkos yang sangat kecil.

==== Sistem Kontrol Versi Lokal

(((version control,local)))
Sebagian besar metode kontrol-versi yang dipilih adalah menyalin berkas ke direktori lain (mungkin direktori time-stamped, jika mereka pintar).
Pendekatan ini sangat umum karena ini sangat sederhana, namun kemungkinan juga memiliki kesalahan.
Sangat mudah untuk melupakan direktori mana anda berada dan secara tidak sengaja menulis ke berkas yang salah atau menyalin berkas yang tidak anda sukai.

Untuk mengatasi masalah ini, programmer lama mengembangkan VCS lokal yang memiliki database sederhana yang menyimpan semua perubahan pada berkas dibawah kontrol revisi.

.Local version control.
image::images/local.png[Local version control diagram]

Salah satu alat VCS yang lebih populer ialah sistem yang disebut RCS, yang masih didistribusikan oleh banyak komputer saat ini.
RCS bekerja dengan menyimpan kelompok tambalan (ini adalah, perbedaan antara berkas) dalam format khusus pada disk; kemudian dapat membuat kembali apa yang tampak seperti berkas pada setiap titik waktu dengan menambahkan semua tambalannya.

==== Sistem Kontrol Versi Terpusat

(((version control,centralized)))
Masalah utama selanjutnya yang dihadapi orang adalah bahwa mereka memerlukan untuk berkolaborasi dengan pengembang pada sistem lain.
Untuk menyelesaikan masalah ini, Centralized Version Control Systems (CVCS) dikembangkan.
Sistem ini, seperti CVS, Subversion, dan Perforce, memiliki sebuah server yang berisi semua berkas berversi, dan sejumlah klien yang memeriksa berkas dari tempat pusat itu. (((CVS)))(((Subversion)))(((Perforce)))
Selama bertahun-tahun, ini telah menjadi standar untuk kontrol versi.

.Centralized version control.
image::images/centralized.png[Centralized version control diagram]

Penyiapan ini menawarkan banyak keuntungan, terutama diatas VCS lokal.
Sebagai contoh, setiap orang tahu sampai tingkat tertentu apa yang dilakukan orang lain dalam proyek ini.
Administrator memiliki kontrol yang baik terhadap siapa yang dapat melakukan apa, dan ini jauh lebih mudah untuk mengelola CVCS dari pada menangani database lokal pada setiap klien.

Bagaimanapun, penyiapan ini juga memiliki beberapa kerugian serius.
Yang paling jelas ialah titik tunggal kegagalan yang ditunjukkan oleh server terpusat.
Jika server itu tidak tersedia dalam waktu satu jam, maka selama jam itu tidak ada yang dapat berkolaborasi sama sekali atau menyimpan perubahan berversi terhadap apapun yang mereka kerjakan.
Jika hardisk database pusat rusak, dan backup yang tepat belum disimpan, anda benar-benar kehilangan segalanya — seluruh riwayat proyek kecuali potret tunggal yang dimiliki seseorang di mesin lokal mereka.
Sistem VCS lokal mengalami masalah yang sama — setiap kali anda memiliki keseluruhan riwayat dari proyek pada satu tempat, anda berisiko kehilangan segalanya.

==== Sistem Kontrol Versi Terdistribusi

(((version control,distributed)))
Disinilah Distributed Version Control System (DVCS) bertindak.
Dalam DVCS (seperti Git, Mercurial, Bazaar atau Darcs), klien tidak hanya memeriksa potret terbaru dari berkas; sebaliknya, mereka sepenuhnya menduplikasi repositori, termasuk riwayat lengkapnya.
Oleh karena itu, jika seluruh server mati, dan sistem ini berkolaborasi melalui server tersebut, salah satu repositori klien dapat disalin kembali ke server untuk memulihkannya.
Setiap klon benar-benar merupakan salinan lengkap dari seluruh data.

.Distributed version control.
image::images/distributed.png[Distributed version control diagram]

Selanjutnya, banyak dari sistem ini menangani cukup baik dengan beberapa repositori jarak jauh yang dapat mereka gunakan, sehingga anda dapat berkolaborasi dengan berbagai kelompok orang dengan berbagai cara secara serempak dalam proyek yang sama.
Ini memungkinkan anda untuk mengatur beberapa jenis dari alur kerja yang tidak mungkin dilakukan didalam sistem terpusat, seperti model hirarki.
